//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MerchandiseClient.MerchandiseService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MerchandiseService.IMerchandiseService", SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IMerchandiseService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMerchandiseService/Login", ReplyAction="http://tempuri.org/IMerchandiseService/LoginResponse")]
        long Login(string loginName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMerchandiseService/Login", ReplyAction="http://tempuri.org/IMerchandiseService/LoginResponse")]
        System.Threading.Tasks.Task<long> LoginAsync(string loginName, string password);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IMerchandiseService/AddToCart", ReplyAction="http://tempuri.org/IMerchandiseService/AddToCartResponse")]
        bool AddToCart(long loginId, long productId);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IMerchandiseService/AddToCart", ReplyAction="http://tempuri.org/IMerchandiseService/AddToCartResponse")]
        System.Threading.Tasks.Task<bool> AddToCartAsync(long loginId, long productId);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IMerchandiseService/ReviewCart", ReplyAction="http://tempuri.org/IMerchandiseService/ReviewCartResponse")]
        bool ReviewCart(long cartId);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IMerchandiseService/ReviewCart", ReplyAction="http://tempuri.org/IMerchandiseService/ReviewCartResponse")]
        System.Threading.Tasks.Task<bool> ReviewCartAsync(long cartId);
        
        [System.ServiceModel.OperationContractAttribute(IsTerminating=true, IsInitiating=false, Action="http://tempuri.org/IMerchandiseService/CheckOut", ReplyAction="http://tempuri.org/IMerchandiseService/CheckOutResponse")]
        bool CheckOut(long CartId);
        
        [System.ServiceModel.OperationContractAttribute(IsTerminating=true, IsInitiating=false, Action="http://tempuri.org/IMerchandiseService/CheckOut", ReplyAction="http://tempuri.org/IMerchandiseService/CheckOutResponse")]
        System.Threading.Tasks.Task<bool> CheckOutAsync(long CartId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMerchandiseServiceChannel : MerchandiseClient.MerchandiseService.IMerchandiseService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MerchandiseServiceClient : System.ServiceModel.ClientBase<MerchandiseClient.MerchandiseService.IMerchandiseService>, MerchandiseClient.MerchandiseService.IMerchandiseService {
        
        public MerchandiseServiceClient() {
        }
        
        public MerchandiseServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MerchandiseServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MerchandiseServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MerchandiseServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public long Login(string loginName, string password) {
            return base.Channel.Login(loginName, password);
        }
        
        public System.Threading.Tasks.Task<long> LoginAsync(string loginName, string password) {
            return base.Channel.LoginAsync(loginName, password);
        }
        
        public bool AddToCart(long loginId, long productId) {
            return base.Channel.AddToCart(loginId, productId);
        }
        
        public System.Threading.Tasks.Task<bool> AddToCartAsync(long loginId, long productId) {
            return base.Channel.AddToCartAsync(loginId, productId);
        }
        
        public bool ReviewCart(long cartId) {
            return base.Channel.ReviewCart(cartId);
        }
        
        public System.Threading.Tasks.Task<bool> ReviewCartAsync(long cartId) {
            return base.Channel.ReviewCartAsync(cartId);
        }
        
        public bool CheckOut(long CartId) {
            return base.Channel.CheckOut(CartId);
        }
        
        public System.Threading.Tasks.Task<bool> CheckOutAsync(long CartId) {
            return base.Channel.CheckOutAsync(CartId);
        }
    }
}
